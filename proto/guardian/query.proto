syntax = "proto3";
package irishub.guardian;

import "gogoproto/gogo.proto";
import "guardian/guardian.proto";
import "google/api/annotations.proto";

option go_package = "github.com/irisnet/irishub/modules/guardian/types";

// Query creates service with guardian as rpc
service Query {
    // Profilers returns all profilers
    rpc Profilers(QueryProfilersRequest) returns (QueryProfilersResponse) {
        option (google.api.http).get = "/irishub/guardian/profilers";
    }

    // Trustees returns all trustees
    rpc Trustees(QueryTrusteesRequest) returns (QueryTrusteesResponse) {
        option (google.api.http).get = "/irishub/guardian/trustees";
    }
}

// QueryProfilersRequest is request type for the Query/Profilers RPC method
message QueryProfilersRequest {
}

// QueryProfilersResponse is response type for the Query/Profilers RPC method
message QueryProfilersResponse {
    repeated Guardian profilers = 1 [ (gogoproto.nullable) = false ];
}

// QueryTrusteesRequest is request type for the Query/Trustees RPC method
message QueryTrusteesRequest {
}

// QueryTrusteesResponse is response type for the Query/Trustees RPC method
message QueryTrusteesResponse {
    repeated Guardian trustees = 1 [ (gogoproto.nullable) = false ];
}